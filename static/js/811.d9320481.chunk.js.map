{"version":3,"file":"static/js/811.d9320481.chunk.js","mappings":"uPAEaA,EAAOC,EAAAA,GAAAA,GAAH,uJASJC,EAAOD,EAAAA,GAAAA,GAAH,oY,SCqCjB,EAzCa,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYH,GAASI,MAAK,SAAAC,GACxBN,EAAQM,EAAKP,KAEd,GAKF,GAAE,CAACE,KAGF,8BACmB,IAAhBF,EAAKQ,QACJ,qEAEA,SAACZ,EAAD,UACGI,EAAKS,KAAI,SAAAC,GAAK,OACb,UAACZ,EAAD,WACGY,EAAMC,cACL,gBACEC,IAAG,UA3BL,mCA2BK,OAAeF,EAAMC,cACxBE,IAAKH,EAAMI,KACXC,MAAO,IACPC,OAAQ,OAGV,gBAAKJ,IAAK,QAASC,IAAKH,EAAMI,KAAMC,MAAO,IAAKC,OAAQ,OAE1D,wBAAKN,EAAMI,SAXFJ,EAAMO,GADJ,OAmBxB,C,mMC7CKC,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE2BC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHhD,cAEUG,EAFV,yBAKWA,EAASf,KAAKgB,SALzB,gCAOIC,QAAQC,MAAR,MAPJ,yFAWeC,EAAU,EAAVA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,EAAMC,GAA/B,gGAE2BP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gBAAqC,CAC1DW,OAAQ,CACNC,QAAQ,GAAD,OAAKX,GACZY,MAAM,GAAD,OAAKJ,GACVC,KAAK,GAAD,OAAKA,MANjB,cAEUN,EAFV,yBASWA,EAASf,MATpB,gCAWIiB,QAAQC,MAAR,MAXJ,yFAeeO,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4Bf,GAA5B,gGAE2BI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDD,EADC,oBACaE,EADb,oBAF3B,cAEUG,EAFV,yBAKWA,EAASf,MALpB,gCAOIiB,QAAQC,MAAR,MAPJ,yFAWepB,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BY,GAA3B,gGAE2BI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDD,EADC,4BACqBE,EADrB,oBAF3B,cAEUG,EAFV,yBAKWA,EAASf,MALpB,gCAOIiB,QAAQC,MAAR,MAPJ,yFAWeQ,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BhB,GAA9B,gGAE2BI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDD,EADC,4BACqBE,EADrB,oBAF3B,cAEUG,EAFV,yBAKWA,EAASf,MALpB,gCAOIiB,QAAQC,MAAR,MAPJ,gF","sources":["components/Cast/Cast.Styled.js","components/Cast/Cast.jsx","services/fetch.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const Item = styled.li`\n  max-width: 190px;\n  height: 270px;\n  padding: 10px;\n  background-color: lightgrey;\n  border-radius: 5px;\n  /* box-shadow: 10px 10px 17px 0px rgba(0, 0, 0, 0.75); */\n  overflow-wrap: break-word;\n\n  h4 {\n    margin-top: 10px;\n    margin-bottom: 0;\n    color: black;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n","import { getCastById } from 'services/fetch';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { List, Item } from './Cast.Styled';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCastById(movieId).then(data => {\n      setCast(data.cast);\n      //   console.log(data.cast);\n    });\n\n    //   return function cleanup() {\n    //     getCastBiId(movieId);\n    //   };\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length === 0 ? (\n        <h3>We don't have any casts for this movie!</h3>\n      ) : (\n        <List>\n          {cast.map(actor => (\n            <Item key={actor.id}>\n              {actor.profile_path ? (\n                <img\n                  src={`${IMG_URL}${actor.profile_path}`}\n                  alt={actor.name}\n                  width={160}\n                  height={210}\n                />\n              ) : (\n                <img src={'image'} alt={actor.name} width={160} height={210} />\n              )}\n              <h4>{actor.name}</h4>\n            </Item>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '4d2e80e66c2c2de6980779cd2eee193d';\n\nasync function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovies(text, page) {\n  try {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n      params: {\n        api_key: `${KEY}`,\n        query: `${text}`,\n        page: `${page}`,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieById(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCastById(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getReviewsById(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport {\n  getTrendingMovies,\n  getMovies,\n  getMovieById,\n  getCastById,\n  getReviewsById,\n};\n"],"names":["List","styled","Item","useState","cast","setCast","movieId","useParams","useEffect","getCastById","then","data","length","map","actor","profile_path","src","alt","name","width","height","id","BASE_URL","KEY","getTrendingMovies","axios","response","results","console","error","getMovies","text","page","params","api_key","query","getMovieById","getReviewsById"],"sourceRoot":""}